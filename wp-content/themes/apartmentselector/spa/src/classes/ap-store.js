// Generated by CoffeeScript 1.7.1
define(['underscore', 'extm', 'async'], function(_, Extm, async) {
  return _.extend(Extm.Store.prototype, {
    getUnitTypes: function(available) {
      var NewUnitCollection, modelArray, unitCollection, unitTypeModel;
      if (available == null) {
        available = true;
      }
      unitCollection = "";
      unitTypeModel = "";
      NewUnitCollection = "";
      modelArray = Array();
      return App.store.find('unit', {
        status: "Available"
      }).then(function(result) {
        unitCollection = result;
        unitCollection.each(function(item) {
          App.store.find('unit_type', item.get('unitType')).then(function(result) {
            unitTypeModel = result;
            return modelArray.push(unitTypeModel);
          });
          return App.store.find('unit', {
            unitType: unitTypeModel.get('id')
          }).then(function(result) {
            var max_coll, max_val, min_val;
            NewUnitCollection = result;
            max_coll = Array();
            NewUnitCollection.each(function(unit) {
              var variantModel;
              variantModel = "";
              return App.store.find('unit_variant', unit.get('unitVariant')).then(function(result) {
                variantModel = result;
                return max_coll.push(variantModel.get('sellablearea'));
              });
            });
            max_val = Math.max.apply(Math, max_coll);
            min_val = Math.min.apply(Math, max_coll);
            unitTypeModel.set({
              'max_value': max_val,
              'min_value': min_val
            });
            return modelArray.push(unitTypeModel);
          });
        });
        unitCollection.reset(modelArray);
        return unitCollection;
      });
    },
    getBuildingModel: function(buildingId) {}
  });
});
