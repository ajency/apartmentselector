// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['extm'], function(Extm) {
  var MainController, mainView;
  MainController = (function(_super) {
    __extends(MainController, _super);

    function MainController() {
      this._getView = __bind(this._getView, this);
      this.showRegionViews = __bind(this.showRegionViews, this);
      return MainController.__super__.constructor.apply(this, arguments);
    }

    MainController.prototype.initialize = function() {
      var layout;
      this.layout = layout = this._getView();
      App.layout = this.layout;
      this.listenTo(layout, 'show', this.showRegionViews);
      return this.show(layout);
    };

    MainController.prototype.showRegionViews = function() {
      var params;
      App.filter(params = {});
      msgbus.showApp('header').insideRegion(App.headerRegion).withOptions();
      return msgbus.showApp('screen:one').insideRegion(this.layout.screenOneRegion).withOptions();
    };

    MainController.prototype._getView = function() {
      return new mainView;
    };

    return MainController;

  })(Extm.RegionController);
  mainView = (function(_super) {
    __extends(mainView, _super);

    function mainView() {
      return mainView.__super__.constructor.apply(this, arguments);
    }

    mainView.prototype.template = '<nav class="cbp-spmenu cbp-spmenu-vertical cbp-spmenu-right" id="cbp-spmenu-s2"> <h3>My Menu</h3> <ul> <li ><a href="#"><span class="glyphicon glyphicon-star"></span> Wishlist</a> <ul class="menuWishlist" id="showWishlist"> <li><a href="#">Wishlist 1</a></li> <li><a href="#">Wishlist 2</a></li> </ul> </li> </ul> </nav> <nav class="cbp-spmenu cbp-spmenu-horizontal cbp-spmenu-top" id="cbp-spmenu-s3"> <div class="row m-l-0 m-r-0"> <div class="col-md-2"> <h3>Additional Filters</h3> </div> <div class="col-md-8 b-l b-r b-grey"> <div class="filterBox"> <input type="checkbox" name="fliter1" id="fliter1" class="checkbox" value="0"/> <label for="fliter1">Filter 1</label> </div> <div class="filterBox"> <input type="checkbox" name="fliter2" id="fliter2" class="checkbox" value="0"/> <label for="fliter2">Filter 2</label> </div> <div class="filterBox"> <input type="checkbox" name="fliter3" id="fliter3" class="checkbox" value="0"/> <label for="fliter3">Filter 3</label> </div> <div class="filterBox"> <input type="checkbox" name="fliter4" id="fliter4" class="checkbox" value="0"/> <label for="fliter4">Filter 4</label> </div> <div class="filterBox"> <input type="checkbox" name="fliter5" id="fliter5" class="checkbox" value="0"/> <label for="fliter5">Filter 5</label> </div> <div class="filterBox"> <input type="checkbox" name="fliter6" id="fliter6" class="checkbox" value="0"/> <label for="fliter6">Filter 6</label> </div> <div class="filterBox"> <input type="checkbox" name="fliter7" id="fliter7" class="checkbox" value="0"/> <label for="fliter7">Filter 7</label> </div> <div class="filterBox"> <input type="checkbox" name="fliter8" id="fliter8" class="checkbox" value="0"/> <label for="fliter8">Filter 8</label> </div> <div class="filterBox"> <input type="checkbox" name="fliter9" id="fliter9" class="checkbox" value="0"/> <label for="fliter9">Filter 9</label> </div> <div class="filterBox"> <input type="checkbox" name="fliter10" id="fliter10" class="checkbox" value="0"/> <label for="fliter10">Filter 10</label> </div> <div class="clearfix"></div> </div> <div class="col-md-2"> <a href="#" class="btn btn-primary m-t-20 m-b-10" id="">Apply</a> </div> </div> </nav> <div id="screen-one-region" > </div> <div id="screen-two-region" > </div> <div id="screen-three-region" > </div> <div id="screen-four-region" > </div>';

    mainView.prototype.events = {
      'click .del': function(e) {
        var index, val;
        console.log(App.cookieArray = App.cookieArray);
        console.log(val = $('#' + e.target.id).attr('data-id'));
        console.log(index = App.cookieArray.indexOf(parseInt(val)));
        App.cookieArray.splice(index, 1);
        $.cookie('key', App.cookieArray);
        return this.showWishList();
      },
      'click a': function(e) {
        return e.preventDefault();
      },
      'click .selectedunit': function(e) {
        var body, menuRight, menuTop, rangeModel, showRightPush, showTop, unitModel;
        menuRight = document.getElementById("cbp-spmenu-s2");
        menuTop = document.getElementById("cbp-spmenu-s3");
        showTop = document.getElementById("showTop");
        showRightPush = document.getElementById("showRightPush");
        body = document.body;
        classie.toggle(showRightPush, "active");
        classie.toggle(body, "cbp-spmenu-push-toleft");
        classie.toggle(menuRight, "cbp-spmenu-open");
        App.unit['name'] = $('#unit' + e.target.id).attr('data-id');
        App.unit['flag'] = 1;
        unitModel = App.master.unit.findWhere({
          id: parseInt(e.target.id)
        });
        App.defaults['unitType'] = unitModel.get('unitType');
        App.defaults['building'] = unitModel.get('building');
        console.log(rangeModel = App.master.range);
        App.backFilter['screen3'].push("floor");
        App.backFilter['screen2'].push("floor", "unitVariant");
        rangeModel.each(function(item) {
          var end, i, rangeArrayVal, start;
          rangeArrayVal = [];
          i = 0;
          start = item.get('start');
          end = item.get('end');
          while (parseInt(start) <= parseInt(end)) {
            rangeArrayVal[i] = parseInt(start);
            start = parseInt(start) + 1;
            i++;
          }
          console.log(jQuery.inArray(parseInt(unitModel.get('floor')), rangeArrayVal));
          if (jQuery.inArray(parseInt(unitModel.get('floor')), rangeArrayVal) >= 0) {
            console.log("aaaaaaaaaaa");
            return App.defaults['floor'] = rangeArrayVal.join(',');
          }
        });
        console.log(App.defaults);
        App.navigate("screen-four");
        msgbus.showApp('header').insideRegion(App.headerRegion).withOptions();
        return msgbus.showApp('screen:four').insideRegion(App.layout.screenFourRegion).withOptions();
      }
    };

    mainView.prototype.regions = {
      screenOneRegion: '#screen-one-region',
      screenTwoRegion: '#screen-two-region',
      screenThreeRegion: '#screen-three-region',
      screenFourRegion: '#screen-four-region'
    };

    mainView.prototype.onShow = function() {
      var height;
      console.log(height = $(window).scrollTop());
      $(window).scroll(function() {
        height = $(window).scrollTop();
        if (height < 300) {
          $('.backBtn').addClass('hidden');
          return $('.slctnTxt').addClass('hidden');
        } else {
          $('.backBtn').removeClass('hidden');
          return $('.slctnTxt').removeClass('hidden');
        }
      });
      return this.showWishList();
    };

    mainView.prototype.showWishList = function() {
      var building, element, model, selectedUnitsArray, table, unitType, unitVariant, _i, _len;
      table = "";
      console.log(typeof $.cookie("key"));
      if ($.cookie("key") !== void 0 && $.cookie("key") !== "") {
        selectedUnitsArray = $.cookie("key").split(",");
        table = "<table>";
        for (_i = 0, _len = selectedUnitsArray.length; _i < _len; _i++) {
          element = selectedUnitsArray[_i];
          model = App.master.unit.findWhere({
            id: parseInt(element)
          });
          unitType = App.master.unit_type.findWhere({
            id: model.get('unitType')
          });
          unitVariant = App.master.unit_variant.findWhere({
            id: model.get('unitVariant')
          });
          building = App.master.building.findWhere({
            id: model.get('building')
          });
          table += '<li><a href="#" id="unit' + element + '" data-id="' + element + '" class="selectedunit">' + model.get('name') + '</a> <a href="#" class="del" id="' + element + '" data-id="' + element + '"  ></a></li> <div class="clearfix"></div>';
        }
        table += '</table>';
      }
      console.log(table);
      return $('#showWishlist').html(table);
    };

    return mainView;

  })(Marionette.LayoutView);
  return msgbus.registerController('main:app', MainController);
});
