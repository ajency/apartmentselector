// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['extm', 'src/apps/screen-four/screen-four-view'], function(Extm, ScreenFourView) {
  var ScreenFourController;
  ScreenFourController = (function(_super) {
    __extends(ScreenFourController, _super);

    function ScreenFourController() {
      this.showViews = __bind(this.showViews, this);
      return ScreenFourController.__super__.constructor.apply(this, arguments);
    }

    ScreenFourController.prototype.initialize = function(opt) {
      this.Collection = this._getSelelctedUnit();
      this.layout = new ScreenFourView.ScreenFourLayout();
      this.listenTo(this.layout, "show", this.showViews);
      return this.show(this.layout);
    };

    ScreenFourController.prototype.showViews = function() {
      this.unitCollection = this.Collection;
      this.mainCollection = this.Collection;
      this.showUnitRegion(this.unitCollection);
      return this.showMainRegion(this.mainCollection);
    };

    ScreenFourController.prototype.showUnitRegion = function(unitCollection) {
      var itemview1;
      itemview1 = this.getView(unitCollection);
      return this.layout.unitRegion.show(itemview1);
    };

    ScreenFourController.prototype.showMainRegion = function(mainCollection) {
      var itemview2;
      itemview2 = this.getUnitsView(mainCollection);
      return this.layout.mainRegion.show(itemview2);
    };

    ScreenFourController.prototype.getView = function(unitCollection) {
      return new ScreenFourView.UnitTypeChildView({
        collection: unitCollection
      });
    };

    ScreenFourController.prototype.getUnitsView = function(mainCollection) {
      return new ScreenFourView.UnitTypeView({
        collection: mainCollection
      });
    };

    ScreenFourController.prototype._getSelelctedUnit = function() {
      var ModelActualArr, highLength, i, index, j, modelArr, modelIdArr, unitCollection, units, unitsArray;
      units = App.currentStore.unit.where({
        building: App.building['name']
      });
      unitsArray = App.currentStore.unit.toArray();
      $.each(units, function(index, value) {
        var unitTypeModel, unitVariantModel;
        unitVariantModel = App.currentStore.unit_variant.findWhere({
          id: value.get('unitVariant')
        });
        unitTypeModel = App.currentStore.unit_type.findWhere({
          id: value.get('unitType')
        });
        value.set('terracearea', unitVariantModel.get('terracearea'));
        value.set('sellablearea', unitVariantModel.get('sellablearea'));
        value.set('carpetarea', unitVariantModel.get('carpetarea'));
        value.set('unittypename', unitTypeModel.get('name'));
        value.set('TwoDimage', unitVariantModel.get('url2dlayout_image'));
        return value.set('ThreeDimage', unitVariantModel.get('url3dlayout_image'));
      });
      units.sort(function(a, b) {
        return a.get('id') - b.get('id');
      });
      modelIdArr = [];
      modelArr = [];
      ModelActualArr = [];
      $.each(units, function(index, value) {
        return modelIdArr.push(value.get('id'));
      });
      index = _.indexOf(modelIdArr, App.unit['name']);
      highLength = modelIdArr.length - index;
      i = index;
      while (i < modelIdArr.length) {
        modelArr.push(modelIdArr[i]);
        i++;
      }
      j = 0;
      while (j < index) {
        modelArr.push(modelIdArr[j]);
        j++;
      }
      console.log(modelArr);
      unitCollection = new Backbone.Collection(units);
      $.each(modelArr, function(index, value) {
        return ModelActualArr.push(unitCollection.get(value));
      });
      console.log(ModelActualArr);
      unitCollection = new Backbone.Collection(ModelActualArr);
      return unitCollection;
    };

    return ScreenFourController;

  })(Extm.RegionController);
  return msgbus.registerController('screen:four', ScreenFourController);
});
