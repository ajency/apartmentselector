// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['extm', 'src/apps/screen-three/screen-three-view'], function(Extm, ScreenThreeView) {
  var ScreenThreeController;
  ScreenThreeController = (function(_super) {
    __extends(ScreenThreeController, _super);

    function ScreenThreeController() {
      this.mainUnitSelected = __bind(this.mainUnitSelected, this);
      return ScreenThreeController.__super__.constructor.apply(this, arguments);
    }

    ScreenThreeController.prototype.initialize = function() {
      var view;
      this.unitsCollection = this._getUnits();
      this.view = view = this._getUnitsView(this.unitsCollection);
      return this.show(view);
    };

    ScreenThreeController.prototype._getUnitsView = function(unitsCollection) {
      return new ScreenThreeView({
        collection: unitsCollection
      });
    };

    ScreenThreeController.prototype._getUnits = function() {
      var floorArray, floorCollection, uniqueFloors, unitCollection, unitcollection;
      unitCollection = App.currentStore.unit;
      floorCollection = App.currentStore.unit.pluck('floor');
      uniqueFloors = _.uniq(floorCollection);
      floorArray = Array();
      $.each(uniqueFloors, function(index, value) {
        var collection, unitArray;
        unitArray = Array();
        unitCollection.each(function(item) {
          var variantModel, viewModel;
          if (parseInt(value) === parseInt(item.get('floor'))) {
            variantModel = App.currentStore.unit_variant.findWhere({
              id: item.get('unitVariant')
            });
            item.set('variantModel', variantModel.get('sellablearea'));
            viewModel = App.currentStore.view.findWhere({
              id: item.get('view')
            });
            item.set('view_name', viewModel.get('name'));
            return unitArray.push(item);
          }
        });
        collection = new Backbone.Collection(unitArray);
        return floorArray.push({
          floorid: value,
          units: collection
        });
      });
      unitcollection = new Backbone.Collection(floorArray);
      return unitcollection;
    };

    ScreenThreeController.prototype.mainUnitSelected = function(childview, childview1, unit, unittypeid, range, size) {
      console.log("hi");
      return App.navigate("#screen-four/unit/" + unit + "/unittype/" + unittypeid + "/range/" + range + "/size/" + size, {
        trigger: true
      });
    };

    return ScreenThreeController;

  })(Extm.RegionController);
  return msgbus.registerController('screen:three', ScreenThreeController);
});
