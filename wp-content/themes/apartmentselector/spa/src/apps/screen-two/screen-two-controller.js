// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['extm', 'src/apps/screen-two/screen-two-view'], function(Extm, ScreenTwoView) {
  var ScreenTwoController;
  ScreenTwoController = (function(_super) {
    __extends(ScreenTwoController, _super);

    function ScreenTwoController() {
      this.typeUnitSelected = __bind(this.typeUnitSelected, this);
      return ScreenTwoController.__super__.constructor.apply(this, arguments);
    }

    ScreenTwoController.prototype.initialize = function(opt) {
      console.log(opt.unittypeid);
      this._promises.push(App.store.getUnits(opt.unittypeid));
      return this.wait();
    };

    ScreenTwoController.prototype.onComplete = function(unitCollection) {
      var screenTwoView;
      screenTwoView = new ScreenTwoView({
        collection: unitCollection
      });
      this.listenTo(screenTwoView, 'childview:childview:type:unit:clicked', this.typeUnitSelected);
      return this.show(screenTwoView);
    };

    ScreenTwoController.prototype.typeUnitSelected = function(childView, childview, buildingId, unitType, range) {
      return App.navigate("#screen-three/unittype/" + unitType + "/range/" + range + "/building/" + buildingId, {
        trigger: true
      });
    };

    return ScreenTwoController;

  })(Extm.RegionController);
  return msgbus.registerController('screen:two', ScreenTwoController);
});
