// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['app', 'backbone'], function(App) {
  return App.module("Entities.Building", function(Building, App) {
    var API, BuildingCollection, buildingCollection;
    Building = (function(_super) {
      __extends(Building, _super);

      function Building() {
        return Building.__super__.constructor.apply(this, arguments);
      }

      Building.prototype.idAttribute = 'ID';

      Building.prototype.defaults = {
        name: '',
        phase: ''
      };

      Building.prototype.name = 'building';

      return Building;

    })(Backbone.Model);
    BuildingCollection = (function(_super) {
      __extends(BuildingCollection, _super);

      function BuildingCollection() {
        return BuildingCollection.__super__.constructor.apply(this, arguments);
      }

      BuildingCollection.prototype.model = Building;

      BuildingCollection.prototype.url = function() {
        return AJAXURL;
      };

      return BuildingCollection;

    })(Backbone.Collection);
    buildingCollection = new BuildingCollection;
    API = {
      getBuildings: function() {
        var jsondata;
        jsondata = JSON.parse(BUILDING);
        buildingCollection.add(jsondata);
        return buildingCollection;
      }
    };
    return App.reqres.setHandler("get:building:collection", function() {
      console.log("building");
      return API.getBuildings();
    });
  });
});
