// Generated by CoffeeScript 1.7.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['app', 'backbone'], function(App) {
  return App.module("Entities.View", function(View, App) {
    var API, ViewCollection, viewCollection;
    View = (function(_super) {
      __extends(View, _super);

      function View() {
        return View.__super__.constructor.apply(this, arguments);
      }

      View.prototype.idAttribute = 'ID';

      View.prototype.defaults = {
        name: ''
      };

      View.prototype.name = 'view';

      return View;

    })(Backbone.Model);
    ViewCollection = (function(_super) {
      __extends(ViewCollection, _super);

      function ViewCollection() {
        return ViewCollection.__super__.constructor.apply(this, arguments);
      }

      ViewCollection.prototype.model = View;

      ViewCollection.prototype.url = function() {
        return AJAXURL;
      };

      return ViewCollection;

    })(Backbone.Collection);
    viewCollection = new ViewCollection;
    API = {
      getViews: function() {
        var jsondata;
        jsondata = JSON.parse(VIEW);
        viewCollection.add(jsondata);
        return viewCollection;
      }
    };
    return App.reqres.setHandler("get:view:collection", function() {
      return API.getViews();
    });
  });
});
